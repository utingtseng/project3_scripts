metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub("\[single cell RNA-seq\]","", title))
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub("'['single cell RNA-seq']'","", title))
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub("single cell RNA-seq","", title))
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub("\[single cell RNA-seq","", title))
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub("\[single cell RNA-seq","", title))
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub("\\[single cell RNA-seq","", title))
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub("\\[single cell RNA-seq\\]","", title))
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
mutate(title = gsub(" \\[single cell RNA-seq\\]","", title))
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather(key= "sample", value="FPKM", -genes)%>%
head()
#join dataframes
dat.long%>%
left_join(., metadata.modified, by = c("samples"= "title"))%>%
head()
#join dataframes
data.long%>%
left_join(., metadata.modified, by = c("samples"= "title"))%>%
head()
#join dataframes
data.long%>%
left_join(., metadata.modified, by = c("sample"= "title"))%>%
head()
#join dataframes
data.long <- data.long%>%
left_join(., metadata.modified, by = c("sample"= "title"))%>%
head()
#explore data
data.long %>%
filer(gene == "Rp1")%>%
head()
#explore data
data.long %>%
filter(gene == "Rp1")%>%
head()
#explore data
data.long %>%
filter(genes == "Rp1")%>%
head()
#explore data
data.long %>%
filter(genes == "Rp1")%>%
group_by(genes)%>%
summarize(mean_FPKM = mean(FPKM))%>%
head()
#explore data
data.long %>%
filter(genes == "Mrpl15")%>%
group_by(genes)%>%
summarize(mean_FPKM = mean(FPKM))%>%
head()
#explore data
data.long %>%
filter(genes == "Mrpl15")%>%
group_by(genes, sample)%>%
summarize(mean_FPKM = mean(FPKM))%>%
head()
View(data.long)
View(data.long)
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather(key= "sample", value="FPKM", -genes)%>%
head()
View(data.long)
View(data.long)
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather(key= "sample", value="FPKM")%>%
head()
View(data.long)
View(data.long)
rownames(dat)<- NULL
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather(key= "sample", value="FPKM")%>%
head()
View(data.long)
View(data.long)
View(dat)
View(dat)
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather(key= "sample", value="FPKM", -genes)%>%
head()
View(data.long)
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather("sample", "FPKM")%>%
head()
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather(dat, "sample", "FPKM")%>%
head()
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather(dat, "sample", "FPKM", -genes)%>%
head()
#reshaping the data
data.long <- dat%>%
#-gene means I exclude the gene column
gather("sample", "FPKM", -genes)%>%
head()
View(data.long)
View(data.long)
View(dat)
View(dat)
View(gse)
View(data.long)
CreateSeuratObject(counts = DB1.data , project = "DB1")
DB1.data <- dat
CreateSeuratObject(counts = DB1.data , project = "DB1")
install.packages('Seurat')
library(GEOquery)
library(Seurat)
#This is the metadata
gse <- getGEO('GSE99933')
data_path <- ("~/Documents/neuroblastoma/rna_seq_data")
#load expression data
dat <- read.csv(file.path(data_path, "GSE99933_E12.5_counts.txt"), sep='\t')
DB1.data <- dat
CreateSeuratObject(counts = DB1.data , project = "DB1")
DB1 <- NormalizeData(DB1)
DimPlot(DB1, reduction = "pca")
DB1 <- NormalizeData(DB1.data)
DimPlot(DB1.data, reduction = "pca")
View(DB1.data)
DimHeatmap(DB1.data, dims = 1, cells = 500, balanced = TRUE)
library(GEOquery)
library(Seurat)
library(tibble)
library(magrittr)
# Read in data
data <- data.table::fread("~/Documents/neuroblastoma/rna_seq_data/GSE99933_E12.5_counts.txt", data.table = F)
# Gene names are in the first column so we need to move them to rownames
data <- data %>%
column_to_rownames("V1")
# Create Seurat
seurat <- CreateSeuratObject(counts = data)
View(data)
View(data)
View(seurat)
View(seurat)
View(data)
View(data)
# Visualize QC metrics as a violin plot
VlnPlot(pbmc, features = c("nFeature_RNA"), ncol = 1)
# Visualize QC metrics as a violin plot
VlnPlot(seurat, features = c("nFeature_RNA"), ncol = 1)
# Visualize QC metrics as a violin plot
VlnPlot(seurat, features = c("nFeature_RNA"), ncol = 2)
# Visualize QC metrics as a violin plot
VlnPlot(seurat, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
View(data)
View(data)
View(seurat)
View(seurat)
head(surat@meta.data, 5)
head(seurat@meta.data, 5)
#normalize the data
seurat <- NormalizeData(seurat)
seurat
DimPlot(seurat, reduction = "pca")
seurat <- RunPCA(seurat, features = VariableFeatures(object = seurat))
seurat <- ScaleData(seurat)
seurat <- RunPCA(seurat, features = VariableFeatures(object = seurat))
pbmc <- ScaleData(pbmc)
seurat <- RunPCA(seurat, features = VariableFeatures(object = seurat))
install.packages("BiocManager")
install.packages("forcats")
install.packages("stringr")
install.packages("ggplot2")
install.packages("ggrepel")
install.packages("readr")
install.packages("tidyr")
install.packages("survminer")
BiocManager::install("GEOquery")
library(GEOquery)
my_id <- "GSE99933"
gse <- getGEO(my_id)
length(gse)
gse <- gse[[1]]
pData(gse) ## print the sample information
fData(gse) ## print the gene annotation
exprs(gse) ## print the expression data
summary(exprs(gse))
gsefData(gse) ## print the gene annotationexprs(gse) ## print the expression databoxplot(exprs(gse),outline=FALSE)
boxplot(exprs(gse),outline=FALSE)
boxplot(exprs(gse),outline=FALSE)
exprs(gse) <- log2(exprs(gse))
boxplot(exprs(gse),outline=FALSE)
my_id <- "GSE147821"
gse <- getGEO(my_id)
length(gse)
gse <- gse[[1]]
gse
pData(gse) ## print the sample information
fData(gse) ## print the gene annotation
exprs(gse) ## print the expression data
summary(exprs(gse))
exprs(gse) <- log2(exprs(gse))
boxplot(exprs(gse),outline=FALSE)
show(gse)
experimentData(gse)
gsmplatforms <- lapply(GSMList(gse),function(x) {Meta(x)$platform_id})
head(gsmplatforms)
gsmplatforms <- lapply(GSMList(gse),function(x) {Meta(x)$platform_id})
head(meta(gse))
head(Meta(gse))
gds <- getGEO(filename=system.file("extdata/GDS507.soft.gz",package="GEOquery"))
View(gds)
head(Meta(gsm))
head(Meta(gsm))
gsm <- getGEO(filename=system.file("extdata/GSM11805.txt.gz",package="GEOquery"))
head(Meta(gsm))
Table(gsm)[1:5,]
Columns(gsm)
show(gse2553)
gse2553 <- getGEO('GSE2553',GSEMatrix=TRUE)
show(gse2553)
gse99933 <- getGEO('GSE99933', GSEMatrix = TRUE)
show(gse2553)
show(gse99933)
library(GEOquery)
library(dplyr)
library(tidyverse)
library(tidyr)
data_path <- ("~/Documents/neuroblastoma/rna_seq_data")
#load expression data
dat <- read.csv(file.path(data_path, "GSE99933_E12.5_counts.txt"), sep='\t')
genesymbols <- dat$Gene
dat <- as.matrix(dat[, -1])
rownames(dat) <- genesymbols
View(dat)
y[1:5, 1:5]
dat[1:5, 1:5]
#load expression data
dat <- read.csv(file.path(data_path, "GSE99933_E12.5_counts.txt"), sep='\t')
dat[1:5, 1:5]
genesymbols <- dat[1;1]
genesymbols <- dat[1,1]
dat <- as.matrix(dat[, -1])
rownames(dat) <- genesymbols
genesymbols <- dat[1,1]
dat <- as.matrix(dat[, -1])
rownames(dat) <- genesymbols
genesymbols <- dat[,1]
dat <- as.matrix(dat[, -1])
rownames(dat) <- genesymbols
dat[1:5, 1:5]
rownames(dat) <- genesymbols
dat[1:5, 1:5]
rownames(dat)
rownames(dat)
dim(dat)
genesymbols <- dat[,1]
dat <- as.matrix(dat[, -1])
dim(dat)
genesymbols <- dat[,1]
genesymbols <- dat[,c(1)]
dat <- as.matrix(dat[, -1])
genesymbols <- dat[1,1]
genesymbols <- dat[1,]
genesymbols <- dat[,1]
genesymbols <- row.names(dat)
genesymbols <- column.names(dat)
#load expression data
dat <- read.csv(file.path(data_path, "GSE99933_E12.5_counts.txt"), sep='\t')
genesymbols <- column.names(dat)
genesymbols <- row.names(dat)
dat <- as.matrix(dat[, -1])
dat[1:5, 1:5]
seurat <- CreateSeuratObject(counts = data)
seurat <- CreateSeuratObject(counts = dat)
VlnPlot(seurat, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
DimPlot(dat, reduction = "umap")
library(Seurat)
seurat <- CreateSeuratObject(counts = dat)
DimPlot(dat, reduction = "umap")
GSE147821
#h5 files from GSE147821
h5_seurat <- Read10X_h5(file.path(data_path, "GSM4446535_10X_19_001.raw_feature_bc_matrix.h5"))
#h5 files from GSE147821
library(Seurat)
h5_seurat <- Read10X_h5(file.path(data_path, "GSM4446535_10X_19_001.raw_feature_bc_matrix.h5"))
install.packages("hdf5r")
library(hdf5r)
h5_seurat <- Read10X_h5(file.path(data_path, "GSM4446535_10X_19_001.raw_feature_bc_matrix.h5"))
h5_seurat <- Read10X_h5(file.path(data_path, "GSE147821_RAW/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5"))
dim(h5_seurat)
head(h5_seurat)
view(h5_seurat)
View(h5)
View(h5_seurat)
fData(h5_seurat)
VlnPlot(h5_seurat, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
h5_seurat <- CreateSeuratObject(counts= h5_seurat)
VlnPlot(seurat, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
library(GEOquery)
library(Seurat)
library(tibble)
library(magrittr)
#This is the metadata
gse <- getGEO('GSE99933')
# Read in data
data <- data.table::fread("~/Documents/neuroblastoma/rna_seq_data/GSE99933_E12.5_counts.txt", data.table = F)
# Gene names are in the first column so we need to move them to rownames
data <- data %>%
column_to_rownames("V1")
# Create Seurat
seurat <- CreateSeuratObject(counts = data)
head(seurat@meta.data, 5)
# Visualize QC metrics as a violin plot
VlnPlot(seurat, features = c("nFeature_RNA", "nCount_RNA"), ncol = 2)
#normalize the data
seurat <- NormalizeData(seurat)
seurat <- ScaleData(seurat)
seurat <- RunPCA(seurat, features = VariableFeatures(object = seurat))
View(seurat)
View(data)
View(dat)
View(data)
data_path <- ("~/Documents/neuroblastoma/rna_seq_data")
#load expression data
dat <- read.csv(file.path(data_path, "GSE99933_E12.5_counts.txt"), sep='\t')
#get dimension of the dataframe
dim(dat)
#get metadata
gse<- getGEO(GEO="GSE99933", GSEMatrix = TRUE)
gse
metadata <- pData(phenoData(gse[[1]]))
head(metadata)
#select columns of interest with a pipeline
metadata.modified <- metadata %>%
select(1,10,11)%>%
#rename the column name
rename(celltype = characteristics_ch1.1)%>%
#change the content of the string
#gsub globally substitute cell type to nothing
mutate(celltype = gsub("cell type:", "", celltype))%>%
rename(genotype= characteristics_ch1)%>%
mutate(genotype = gsub("genotype", "", genotype))%>%
#\\ is used to escape the []
mutate(title = gsub(" \\[single cell RNA-seq\\]","", title))
View(metadata)
#look at the data, difficult to add metadata to the wide format (samples as columns)
head(dat)
#adding a column named genes (essentially a copy from rownames)
dat <- data.frame(genes = row.names(dat), dat)
rownames(dat)<- NULL
#look at the data, difficult to add metadata to the wide format (samples as columns)
head(dat)
#reshaping the data
#somehting is wrong here
data.long <- dat%>%
#-gene means I exclude the gene column
gather("sample", "FPKM", -genes)%>%
head()
library(dplyr)
library(Seurat)
library(patchwork)
data_path -> "~/Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5"
pbmc.data <- Read10X(data.dir = data_path, project = "NB")
pbmc.data <- Read10X(data.dir = "~/Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5", project = "NB")
pbmc.data <- Read10X(data.dir = "~/Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5")
pbmc.data <- Read10X(data.dir = "~/Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5")
pbmc.data <- Read10X(data.dir = "./Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5")
pbmc.data <- Read10X_h5(data.dir = "~/Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5")
pbmc.data <- Read10X_h5("~/Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5")
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "NB", min.cells = 3, min.features = 200)
pbmc
pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
View(pbmc)
View(pbmc)
VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot2
pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
pbmc <- FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(pbmc), 10)
top10
plot1 <- VariableFeaturePlot(pbmc)
plot1
plot1 <- VariableFeaturePlot(pbmc)
plot1
plot1 <- VariableFeaturePlot(pbmc)
plot1
all.genes <- rownames(pbmc)
all.genes
pbmc <- ScaleData(pbmc, features = all.genes)
pbmc <- RunPCA(pbmc, features = VariableFeatures(object = pbmc))
print(pbmc[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(pbmc, dims = 1:2, reduction = "pca")
DimPlot(pbmc, reduction = "pca")
pbmc <- RunUMAP(pbmc, dims = 1:10)
DimPlot(pbmc, reduction = "umap")
pbmc <- RunUMAP(pbmc, dims = 1:10)
DimPlot(pbmc, reduction = "umap")
DimHeatmap(pbmc, dims = 1, cells = 500, balanced = TRUE)
ElbowPlot(pbmc)
pbmc <- FindNeighbors(pbmc, dims = 1:10)
pbmc <- FindClusters(pbmc, resolution = 0.5)
DimPlot(pbmc, reduction = "pca")
VizDimLoadings(pbmc, dims = 1:2, reduction = "pca")
DimPlot(pbmc, reduction = "pca")
DimPlot(pbmc, reduction = "umap")
pbmc <- RunUMAP(pbmc, dims = 1:10)
DimPlot(pbmc, reduction = "umap")
#GSM4446535 from GSE147821
#notes: This works and try to merge different datasets next time
library(dplyr)
library(Seurat)
#GSM4446535 from GSE147821
#notes: This works and try to merge different datasets next time
install.packages('Seurat')
install.packages('remotes')
remotes::install_github(repo = 'satijalab/seurat', ref = 'develop')
install.packages("remotes")
library(Seurat)
remotes::install_github(repo = 'satijalab/seurat', ref = 'develop')
library(Seurat)
library(patchwork)
pbmc.data <- Read10X_h5("~/Documents/neuroblastoma/rna_seq_data/GSM4446535_10X_19_001.raw_feature_bc_matrix.h5")
library(Seurat)
remotes::install_version(package = 'Seurat', version = package_version('2.3.0'))
